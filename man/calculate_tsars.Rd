% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/centrix-tsars.R
\name{calculate_tsars}
\alias{calculate_tsars}
\title{Calculate TSAR and Sub-Components.}
\usage{
calculate_tsars(track_events, red_events, asset_map)
}
\arguments{
\item{track_events}{A data frame containing windowed track events. No input
validation is performed. It is assumed that the data frame will follow the
structure returned by the function \code{\link[=filter_track_events]{filter_track_events()}}}

\item{red_events}{A data frame containing windowed red events. No input
validation is performed. It is assumed that the data frame will follow the
structure returns by the function \code{\link[=filter_aspect_events]{filter_aspect_events()}}}

\item{asset_map}{The asset map is a representation of the track section.
Currently, the track is represented by a linear data frame. However, this
does not support more complex track layouts, such as junctions. The asset
map should be a data frame containing a 1-1 mapping from signal ID to berth
name, a 1-many mapping from berth name to track ID, and an extra \code{event}
column. The \code{event} column represents the fact that there are separate
Centrix observations for trains entering and exiting a track. Therefore,
each track can have both an \code{'enters'} and a \code{'vacates'} events associated
with it. Note that in order to calculate berth travel times, it is
necessary to know when the train entered to next berth. Therefore, it may
be impossible to calculate travel times for the final berth. The asset map
data frame should adhere to the following structure:
\itemize{
\item{\code{signal}}: A \code{\link[=character]{character()}} vector containing the signal ID. It
should follow the regex pattern \code{"S[0-9]+"}.
\item{\code{berth}}: A \code{\link[=character]{character()}} vector containing the berth ID. It
should follow the regex pattern \code{"[A-Z]+"}.
\item{\code{track}}: A \code{\link[=character]{character()}} vector containing the track ID. It
should follow the regex pattern \code{"T[A-Z]+(-[0-9])?"}.
\item{\code{event}}: A \code{\link[=character]{character()}} vector containing the event type. It
must be one of either "enters" or "vacates".
}}
}
\value{
A data frame containing berth level observations including TSAR and
its sub-components. The following columns are included:
\itemize{
\item{\code{signal}} Signal ID.
\item{\code{berth}} Berth ID.
\item{\code{train_id}} Train ID.
\item{\code{aspect}} Signal aspect on berth entry.
\item{\code{t_enters}} Date and time of berth entry.
\item{\code{t_red_on}} Date and time of signal changing to red.
\item{\code{t_enters_next}} Date and time of entry into next berth.
\item{\code{t_vacates}} Date and time of vacating the berth.
\item{\code{t_red_off}} Date and time of signal changing from red.
\item{\code{TSAR}} Amount of time the signal spends on red.
\item{\code{T_onset}} Signal onset time between train entry and signal
changing to red.
\item{\code{T_clear}} Amount of time the train takes to clear the berth.
\item{\code{T_offset}} Signal offset time between train exit and signal
changing from red.
\item{\code{T_travel}} Amount of time the train takes to travel the
length of the berth.
\item{\code{T_coach}} Amount of time the train takes to travel its own
length.
}
}
\description{
Calculate berth-level information including TSAR and all sub-components,
e.g., T_onset, T_clear, T_offset, etc.
}
\details{
Combines valid track events from \code{\link[=filter_track_events]{filter_track_events()}} with valid red
signal events from \code{\link[=filter_aspect_events]{filter_aspect_events()}} to calculate TSAR and its
sub-components. The data frame returned by this function contains the first
data that can be used for analysis.
}
\examples{
data(valid_track_events, valid_aspect_events, asset_map)
valid_aspect_events
valid_track_events

berth_events <- calculate_tsars(valid_track_events,
                                valid_aspect_events,
                                asset_map)
berth_events

}
\seealso{
\code{\link[=filter_aspect_events]{filter_aspect_events()}} \code{\link[=wrangle_centrix]{wrangle_centrix()}} \link{valid_track_events}
\link{valid_aspect_events} \link{berth_events}
}
