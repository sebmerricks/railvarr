% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/timetable.R
\name{find_calling_patterns}
\alias{find_calling_patterns}
\title{Find calling patterns from timetable}
\usage{
find_calling_patterns(timetable, stopping_stations)
}
\arguments{
\item{timetable}{Data frame containing timetable data. Strict input validation
is performed. Must be a data frame with the following columns:
\itemize{
\item{\code{train_header}}{\code{\link[=character]{character()}} Train identifier}
\item{\code{dt_origin}}{\code{\link[lubridate:posix_utils]{lubridate::POSIXct()}} Datetime at which the train
originated}
\item{\code{geo}}{\code{\link[=character]{character()}} Name of event location}
\item{\code{event}}{\code{\link[=character]{character()}} Type of event, must only contain the
following values: \code{Pass}, \code{Arrive}, \code{Depart}, \code{Originate},
\code{Terminate}}
\item{\code{wtt}}{\code{\link[lubridate:posix_utils]{lubridate::POSIXct()}} Scheduled datetime of event}
\item{\code{t}}{\code{\link[lubridate:posix_utils]{lubridate::POSIXct()}} Actual datetime of event}
\item{\code{delay}}{\code{\link[=numeric]{numeric()}} Difference between actual time and scheduled
time of event}
\item{\code{allow}}{\code{\link[=numeric]{numeric()}} Timetabled delay allowance}
}}

\item{stopping_stations}{A subset of \code{stations} that specifies which stations
trains can stop at. This is used for calculating calling patterns.
Therefore, any train which does not stop at any of the stations specified in
\code{stopping_stations} will be labeled as a 'fast' train. Trains which do stop
at these stations will be labeled with 'stopping-', with the specific
stations at which they stop attached as suffixes. For example, if a train
stops at 'geo10', its calling pattern will be labeled as 'stopping-geo10'.}
}
\value{
The timetable with calling patterns added.
}
\description{
Find calling patterns from timetable
}
\examples{
data(timetable, stations, stopping_stations)
calling_patterns <- timetable |>
                      filter_relevant_direction(stations) |>
                      find_calling_patterns(stopping_stations)
calling_patterns[,c("train_header", "dt_origin", "geo", "event", "group")]

}
\seealso{
\code{\link[=filter_relevant_services]{filter_relevant_services()}} \code{\link[=wrangle_timetable]{wrangle_timetable()}}
}
