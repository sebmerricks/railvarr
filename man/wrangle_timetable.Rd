% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/timetable.R
\name{wrangle_timetable}
\alias{wrangle_timetable}
\title{Wrangle Timetable Data}
\usage{
wrangle_timetable(timetable, stations, stopping_stations)
}
\arguments{
\item{timetable}{Data frame containing timetable data. Strict input validation
is performed. Must be a data frame with the following columns:
\itemize{
\item{\code{train_header}}{\code{\link[=character]{character()}} Train identifier}
\item{\code{dt_origin}}{\code{\link[lubridate:posix_utils]{lubridate::POSIXct()}} Datetime at which the train
originated}
\item{\code{geo}}{\code{\link[=character]{character()}} Name of event location}
\item{\code{event}}{\code{\link[=character]{character()}} Type of event, must only contain the
following values: \code{Pass}, \code{Arrive}, \code{Depart}, \code{Originate},
\code{Terminate}}
\item{\code{wtt}}{\code{\link[lubridate:posix_utils]{lubridate::POSIXct()}} Scheduled datetime of event}
\item{\code{t}}{\code{\link[lubridate:posix_utils]{lubridate::POSIXct()}} Actual datetime of event}
\item{\code{delay}}{\code{\link[=numeric]{numeric()}} Difference between actual time and scheduled
time of event}
\item{\code{allow}}{\code{\link[=numeric]{numeric()}} Timetabled delay allowance}
}}

\item{stations}{You should provide a list of stations that you are interested
in. For example, a train may stop at many stations on its journey, but your
Centrix data only covers a small subset of that journey. Any trains which do
not pass through any of the stations specified will be discarded. It is
important to note that timetables do not only include station stops, they
also include junctions and other \code{'Pass'} events. These locations must also
be included in \code{stations}, even though they are not actually stations.

Therefore, your list should completely encompasses your Centrix data. This
ensures that all relevant services are included in the processed timetable.
However, you may need to ensure that no irrelevant services are accidentally
included.

The order in which you define this list is important if you are using
\code{\link[=wrangle_timetable]{wrangle_timetable()}} or \code{\link[=filter_relevant_direction]{filter_relevant_direction()}}, because it specifies
the direction in which trains should be travelling. This allows for the
filtering of services by direction. You can avoid this by using the lower
level functions directly and not using \code{\link[=filter_relevant_direction]{filter_relevant_direction()}}, but
these functions do not currently come with input validation, so discretion
is advised.}

\item{stopping_stations}{A subset of \code{stations} that specifies which stations
trains can stop at. This is used for calculating calling patterns.
Therefore, any train which does not stop at any of the stations specified in
\code{stopping_stations} will be labeled as a 'fast' train. Trains which do stop
at these stations will be labeled with 'stopping-', with the specific
stations at which they stop attached as suffixes. For example, if a train
stops at 'geo10', its calling pattern will be labeled as 'stopping-geo10'.}
}
\value{
A subset of the timetable which contains trains that pass through the
specified stations in the given order. Time zone is set to "UTC".
}
\description{
A wrapper for timetable processing functions \code{\link[=filter_relevant_services]{filter_relevant_services()}},
\code{\link[=filter_relevant_direction]{filter_relevant_direction()}}, and \code{\link[=find_calling_patterns]{find_calling_patterns()}}.
}
\examples{
data(timetable, stations, stopping_stations)
timetable
timetable_subset <- wrangle_timetable(timetable, stations, stopping_stations)
timetable_subset

}
\seealso{
\code{\link[=filter_relevant_services]{filter_relevant_services()}} \code{\link[=find_calling_patterns]{find_calling_patterns()}}
\code{\link[=calculate_journey_specifications]{calculate_journey_specifications()}} \code{\link[=match_ids]{match_ids()}} \link{timetable}
\link{timetable_subset}
}
