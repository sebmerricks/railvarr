% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/centrix-preprocessing.R
\name{preprocess_signal_events}
\alias{preprocess_signal_events}
\title{Preprocess raw Centrix data}
\usage{
preprocess_signal_events(raw_events, asset_map, state_mapping)
}
\arguments{
\item{raw_events}{Data frame containing raw Centrix data. No input validation
is performed. The data should match the structure of Centrix data as
described in \code{\link[=wrangle_centrix]{wrangle_centrix()}}.}

\item{asset_map}{Data frame containing a map of the track section, used to
filter the raw signal events down to only the signals specified in the
asset map. No input validation is performed. See \code{\link[=wrangle_centrix]{wrangle_centrix()}} for
the expected structure.}

\item{state_mapping}{Data frame containing a 1-1 mapping from signal state to
aspect. See \link{state_mapping} for the expected structure.}
}
\value{
A data frame containing aspect events with columns:
\itemize{
\item 'signal': (character) signal ID,
\item 'dt': (lubridate::POSIXct) datetime,
\item 'aspect': (factor) signal aspect after train enters the signal section.
\item 'past_aspect': (factor) signal aspect before train enters the signal
section.
}
}
\description{
\code{preprocess_signal_events()} handles only signals, defined by
the \code{asset} string starting with the character 'S'.

\code{preprocess_track_events()} handles only tracks, defined by the \code{asset}
string starting with the character 'T'.
}
\details{
\code{preprocess_signal_events()} converts the raw \code{asset} string into
signal ID and state, furthering processing the state into a signal aspect.

\code{preprocess_track_events()} converts the \code{transition} data into track entry
and exit events.
}
\seealso{
\code{\link[=wrangle_centrix]{wrangle_centrix()}}
}
