% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/timetable.R
\name{filter_relevant_services}
\alias{filter_relevant_services}
\alias{filter_relevant_direction}
\title{Filter timetable to relevant trains}
\usage{
filter_relevant_services(timetable, stations)

filter_relevant_direction(timetable, stations)
}
\arguments{
\item{timetable}{Data frame containing timetable data. Strict input validation
is performed. Must be a data frame with the following columns:
\itemize{
\item{\code{train_header}}{\code{\link[=character]{character()}} Train identifier}
\item{\code{dt_origin}}{\code{\link[lubridate:posix_utils]{lubridate::POSIXct()}} Datetime at which the train
originated}
\item{\code{geo}}{\code{\link[=character]{character()}} Name of event location}
\item{\code{event}}{\code{\link[=character]{character()}} Type of event, must only contain the
following values: \code{Pass}, \code{Arrive}, \code{Depart}, \code{Originate},
\code{Terminate}}
\item{\code{wtt}}{\code{\link[lubridate:posix_utils]{lubridate::POSIXct()}} Scheduled datetime of event}
\item{\code{t}}{\code{\link[lubridate:posix_utils]{lubridate::POSIXct()}} Actual datetime of event}
\item{\code{delay}}{\code{\link[=numeric]{numeric()}} Difference between actual time and scheduled
time of event}
\item{\code{allow}}{\code{\link[=numeric]{numeric()}} Timetabled delay allowance}
}}

\item{stations}{You should provide a list of stations that you are interested
in. For example, a train may stop at many stations on its journey, but your
Centrix data only covers a small subset of that journey. Any trains which do
not pass through any of the stations specified will be discarded. It is
important to note that timetables do not only include station stops, they
also include junctions and other \code{'Pass'} events. These locations must also
be included in \code{stations}, even though they are not actually stations.

Therefore, your list should completely encompasses your Centrix data. This
ensures that all relevant services are included in the processed timetable.
However, you may need to ensure that no irrelevant services are accidentally
included.

The order in which you define this list is important if you are using
\code{\link[=wrangle_timetable]{wrangle_timetable()}} or \code{\link[=filter_relevant_direction]{filter_relevant_direction()}}, because it specifies
the direction in which trains should be travelling. This allows for the
filtering of services by direction. You can avoid this by using the lower
level functions directly and not using \code{\link[=filter_relevant_direction]{filter_relevant_direction()}}, but
these functions do not currently come with input validation, so discretion
is advised.}
}
\value{
\code{filter_relevant_services} returns a (usually) smaller timetable
only containing trains which pass through or stop at the specified
stations.

\code{filter_relevant_direction} returns a (usually) smaller timetable only
containing trains which pass through or stop at the specified stations in
the given order.
}
\description{
\code{filter_relevant_services()} filters only by station, ignoring
direction.

\code{filter_relevant_direction()} filters by both station and direction. It is
assumed that \code{stations} is in the forward direction, i.e., the first
element is at the start of the track section and the last element is at the
end.
}
\examples{
data(timetable, stations)
timetable
timetable_services <- filter_relevant_services(timetable, stations)
timetable_services
timetable_direction <- filter_relevant_direction(timetable, stations)
timetable_direction

}
\seealso{
\code{\link[=wrangle_timetable]{wrangle_timetable()}} \code{\link[=find_calling_patterns]{find_calling_patterns()}}
}
