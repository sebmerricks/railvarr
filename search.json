[{"path":"https://sebmerricks.github.io/railvarr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 railvarr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://sebmerricks.github.io/railvarr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sebastian Merricks. Author, maintainer.","code":""},{"path":"https://sebmerricks.github.io/railvarr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Merricks S (2023). railvarr: Rail Network Performance Variability Analysis. https://github.com/sebmerricks/railvarr, https://sebmerricks.github.io/railvarr/.","code":"@Manual{,   title = {railvarr: Rail Network Performance Variability Analysis},   author = {Sebastian Merricks},   year = {2023},   note = {https://github.com/sebmerricks/railvarr, https://sebmerricks.github.io/railvarr/}, }"},{"path":"https://sebmerricks.github.io/railvarr/index.html","id":"railvarr","dir":"","previous_headings":"","what":"Rail Network Performance Variability Analysis","title":"Rail Network Performance Variability Analysis","text":"goal railvarr …","code":""},{"path":"https://sebmerricks.github.io/railvarr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Rail Network Performance Variability Analysis","text":"can install development version railvarr GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"sebmerricks/railvarr\")"},{"path":"https://sebmerricks.github.io/railvarr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Rail Network Performance Variability Analysis","text":"basic example shows solve common problem: special using README.Rmd instead just README.md? can include R chunks like : ’ll still need render README.Rmd regularly, keep README.md --date. devtools::build_readme() handy . also use GitHub Actions re-render README.Rmd every time push. example workflow can found : https://github.com/r-lib/actions/tree/v1/examples. can also embed plots, example:  case, don’t forget commit push resulting figure files, display GitHub CRAN.","code":"library(railvarr) ## basic example code summary(cars) #>      speed           dist        #>  Min.   : 4.0   Min.   :  2.00   #>  1st Qu.:12.0   1st Qu.: 26.00   #>  Median :15.0   Median : 36.00   #>  Mean   :15.4   Mean   : 42.98   #>  3rd Qu.:19.0   3rd Qu.: 56.00   #>  Max.   :25.0   Max.   :120.00"},{"path":"https://sebmerricks.github.io/railvarr/reference/calculate_time_windows.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate train journey intervals — calculate_time_windows","title":"Calculate train journey intervals — calculate_time_windows","text":"Calculates set time intervals containing valid Centrix observations. observations correspond distinct / interlaced train journeys.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/calculate_time_windows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate train journey intervals — calculate_time_windows","text":"","code":"calculate_time_windows(aspect_events, track_events, asset_map)"},{"path":"https://sebmerricks.github.io/railvarr/reference/calculate_time_windows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate train journey intervals — calculate_time_windows","text":"aspect_events data frame containing pre-processed aspect events columns: signal (character) signal ID. dt (lubridate::POSIXct) datetime. aspect (factor) signal aspect train enters signal section. past_aspect (factor) signal aspect train enters signal section. track_events data frame containing pre-processed track events columns: track (character) track ID. dt (lubridate::POSIXct) datetime. occcupied (logical) TRUE train enters track, else FALSE. event (character) 'enters' train enters track, else 'vacates'. asset_map data frame containing 1-1 mapping signals berths 1-many mapping berths tracks. map also contains 1-many mapping tracks events, reflecting fact 'enter' 'vacate' event track. Therefore, data frame adhere following structure: signal: character vector containing signal ID. follow regex pattern \"S[0-9]+\". berth: character vector containing berth ID. follow regex pattern \"[-Z]+\". track: character vector containing track ID. follow regex pattern \"T[-Z]+(-[0-9])?\". event: character vector containing event type. must one either \"enters\" \"vacates\".","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/calculate_time_windows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate train journey intervals — calculate_time_windows","text":"data frame containing window IDs time intervals columns: window (numeric) window ID. interval (lubridate::interval) time intervals. window indicates time interval data contain valid observations.","code":""},{"path":[]},{"path":"https://sebmerricks.github.io/railvarr/reference/calculate_tsars.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate TSAR and Sub-Components. — calculate_tsars","title":"Calculate TSAR and Sub-Components. — calculate_tsars","text":"Calculate berth-level information including TSAR sub-components, e.g., T_onset, T_clear, T_offset, etc.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/calculate_tsars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate TSAR and Sub-Components. — calculate_tsars","text":"","code":"calculate_tsars(track_events, red_events, asset_map)"},{"path":"https://sebmerricks.github.io/railvarr/reference/calculate_tsars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate TSAR and Sub-Components. — calculate_tsars","text":"track_events data frame containing windowed track events. input validation performed. assumed data frame follow structure returned function filter_track_events() red_events data frame containing windowed red events. input validation performed. assumed data frame follow structure returns function filter_aspect_events() asset_map data frame containing map track section. input validation performed. See wrangle_centrix() expected structure.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/calculate_tsars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate TSAR and Sub-Components. — calculate_tsars","text":"data frame containing berth level observations including TSAR subcomponents. following columns included: signal Signal ID. berth Berth ID. train_id Train ID. aspect Signal aspect berth entry. t_enters Date time berth entry. t_red_on Date time signal changing red. t_enters_next Date time entry next berth. t_vacates Date time vacating berth. t_red_off Date time signal changing red. TSAR Amount time signal spends red. T_onset Signal onset time train entry signal changing red. T_clear Amount time train takes clear berth. T_offset Signal offset time train exit signal changing red. T_travel Amount time train takes travel length berth. T_coach Amount time train takes travel length.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/cluster_journeys.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster train journeys — cluster_journeys","title":"Cluster train journeys — cluster_journeys","text":"Clusters Centrix data groups based travel times across berths.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/cluster_journeys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster train journeys — cluster_journeys","text":"","code":"cluster_journeys(   berth_events,   outliers = NULL,   outlier_detection = \"none\",   ... )"},{"path":"https://sebmerricks.github.io/railvarr/reference/cluster_journeys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster train journeys — cluster_journeys","text":"berth_events data frame containing berth-level Centrix events containing columns: signal, berth, train_id, aspect, T_travel, time_elapsed. outliers data frame containing train IDs outliers. Ignored unless outlier_detection == \"manual\". outlier_detection approach use outliers. Options : none outliers removed. manual Manually remove outliers using outliers parameter. boxplot Unimplemented. ... Arguments passed stats::kmeans x numeric matrix data, object can coerced     matrix (numeric vector data frame     numeric columns). centers either number clusters, say \\(k\\), set     initial (distinct) cluster centres.  number, random set     (distinct) rows x chosen initial centres. iter.max maximum number iterations allowed. nstart centers number, many random sets     chosen? algorithm character: may abbreviated.  Note     \"Lloyd\" \"Forgy\" alternative names one     algorithm. trace logical integer number, currently used     default method (\"Hartigan-Wong\"): positive (true),     tracing information progress algorithm     produced.  Higher values may produce tracing information.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/cluster_journeys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster train journeys — cluster_journeys","text":"data frame containing train IDs clusters. Clusters ordered based total variance, highest variance first.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/filter_aspect_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Centrix events by time intervals — filter_aspect_events","title":"Filter Centrix events by time intervals — filter_aspect_events","text":"Filter Centrix events occur within calculated valid time intervals. filter_track_events() filters tracks specified asset map. filter_aspect_events() filters signals specified asset map.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/filter_aspect_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Centrix events by time intervals — filter_aspect_events","text":"","code":"filter_aspect_events(aspect_events, time_windows, asset_map)  filter_track_events(track_events, time_windows, asset_map)"},{"path":"https://sebmerricks.github.io/railvarr/reference/filter_aspect_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Centrix events by time intervals — filter_aspect_events","text":"aspect_events data frame containing pre-processed aspect events columns: signal (character) signal ID. dt (lubridate::POSIXct) datetime. aspect (factor) signal aspect train enters signal section. past_aspect (factor) signal aspect train enters signal section. time_windows data frame containing window IDs time intervals columns: window (numeric) window ID. interval (lubridate::interval) time intervals. window indicates time interval data contain valid observations. asset_map data frame containing 1-1 mapping signals berths 1-many mapping berths tracks. map also contains 1-many mapping tracks events, reflecting fact 'enter' 'vacate' event track. Therefore, data frame adhere following structure: signal: character vector containing signal ID. follow regex pattern \"S[0-9]+\". berth: character vector containing berth ID. follow regex pattern \"[-Z]+\". track: character vector containing track ID. follow regex pattern \"T[-Z]+(-[0-9])?\". event: character vector containing event type. must one either \"enters\" \"vacates\". track_events data frame containing pre-processed track events columns: track (character) track ID. dt (lubridate::POSIXct) datetime. occcupied (logical) TRUE train enters track, else FALSE. event (character) 'enters' train enters track, else 'vacates'.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/filter_aspect_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Centrix events by time intervals — filter_aspect_events","text":"data frame containing filtered events, additional columns: window (numeric) window ID. interval (lubridate::interval) time interval.","code":""},{"path":[]},{"path":"https://sebmerricks.github.io/railvarr/reference/filter_relevant_direction.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter timetable by direction — filter_relevant_direction","title":"Filter timetable by direction — filter_relevant_direction","text":"Filter timetable direction","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/filter_relevant_direction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter timetable by direction — filter_relevant_direction","text":"","code":"filter_relevant_direction(timetable, stations)"},{"path":"https://sebmerricks.github.io/railvarr/reference/filter_relevant_direction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter timetable by direction — filter_relevant_direction","text":"timetable Data frame containing timetable data. stations List containing station names.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/filter_relevant_direction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter timetable by direction — filter_relevant_direction","text":"(usually) smaller timetable containing trains pass stop specified stations given order.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/filter_relevant_services.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter timetable by stations — filter_relevant_services","title":"Filter timetable by stations — filter_relevant_services","text":"Filter timetable stations","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/filter_relevant_services.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter timetable by stations — filter_relevant_services","text":"","code":"filter_relevant_services(timetable, stations)"},{"path":"https://sebmerricks.github.io/railvarr/reference/filter_relevant_services.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter timetable by stations — filter_relevant_services","text":"timetable Data frame containing timetable data. stations List containing station names.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/filter_relevant_services.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter timetable by stations — filter_relevant_services","text":"(usually) smaller timetable containing trains pass stop specified stations.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/find_calling_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Find calling patterns from timetable — find_calling_patterns","title":"Find calling patterns from timetable — find_calling_patterns","text":"Find calling patterns timetable","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/find_calling_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find calling patterns from timetable — find_calling_patterns","text":"","code":"find_calling_patterns(timetable)"},{"path":"https://sebmerricks.github.io/railvarr/reference/find_calling_patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find calling patterns from timetable — find_calling_patterns","text":"timetable Data frame containing timetable data.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/find_calling_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find calling patterns from timetable — find_calling_patterns","text":"timetable calling patterns added.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/match_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Match Centrix and Timetable IDs — match_ids","title":"Match Centrix and Timetable IDs — match_ids","text":"Calculates matching IDs Centrix Timetable data.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/match_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match Centrix and Timetable IDs — match_ids","text":"","code":"match_ids(berth_events_classes, timetable_groups, match_mapping)"},{"path":"https://sebmerricks.github.io/railvarr/reference/match_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match Centrix and Timetable IDs — match_ids","text":"berth_events_classes Data frame containing berth-level Centrix data. timetable_groups Data frame containing Timetable data. match_mapping Data frame containing instructions matching.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/match_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match Centrix and Timetable IDs — match_ids","text":"Data frame containing 1-1 mapping Centrix IDs Timetable IDs.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/plot_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot clustered train journeys — plot_clusters","title":"Plot clustered train journeys — plot_clusters","text":"Plot clustered train journeys","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/plot_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot clustered train journeys — plot_clusters","text":"","code":"plot_clusters(cluster_events)"},{"path":"https://sebmerricks.github.io/railvarr/reference/plot_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot clustered train journeys — plot_clusters","text":"cluster_events Data frame matching output cluster_journeys()","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/preprocess_signal_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess raw Centrix data — preprocess_signal_events","title":"Preprocess raw Centrix data — preprocess_signal_events","text":"preprocess_signal_events() handles signals, defined asset string starting character 'S'. preprocess_track_events() handles tracks, defined asset string starting character 'T'.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/preprocess_signal_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess raw Centrix data — preprocess_signal_events","text":"","code":"preprocess_signal_events(raw_centrix, asset_map, state_map)  preprocess_track_events(raw_centrix, asset_map)"},{"path":"https://sebmerricks.github.io/railvarr/reference/preprocess_signal_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess raw Centrix data — preprocess_signal_events","text":"raw_centrix data frame containing raw Centrix data. Strict input validation applied ensure data adhere expected structure. data data frame following columns: asset: character vector containing asset ID. Tracks expected follow regex pattern \"T[-Z]+(-[0-9])?\". E.g., 'TABC' 'TABC-1' 'TABC-2'. Signals expected follow regex pattern \"S[0-9]+\\s[-Z]+\". E.g., 'S123 HGE' 'S123 '. second part signal ID state code referring signal aspect, e.g. 'RGE' red 'DGE' green. codes see: https://wiki.openraildata.com/index.php/Signalling_Nomenclature#Signals. dt: lubridate::POSIXct object representing date time observation made. transition: character vector representing state transition caused observation. transition can one \"DN\" \"DN \", anything else ignored. tracks, \"DN\" signifies train entering track, \"DN \" train vacating track. signals, \"DN\" represents aspect change. Therefore, signals \"DN \" transition ignored. asset_map data frame containing 1-1 mapping signals berths 1-many mapping berths tracks. map also contains 1-many mapping tracks events, reflecting fact 'enter' 'vacate' event track. Therefore, data frame adhere following structure: signal: character vector containing signal ID. follow regex pattern \"S[0-9]+\". berth: character vector containing berth ID. follow regex pattern \"[-Z]+\". track: character vector containing track ID. follow regex pattern \"T[-Z]+(-[0-9])?\". event: character vector containing event type. must one either \"enters\" \"vacates\". state_map data frame containing 1-1 mapping signal state signal aspect. See state_mapping (default) expected structure.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/preprocess_signal_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess raw Centrix data — preprocess_signal_events","text":"preprocess_signal_events returns data frame containing aspect events columns: signal (character) signal ID. dt (lubridate::POSIXct) datetime. aspect (factor) signal aspect train enters signal section. past_aspect (factor) signal aspect train enters signal section. preprocess_track_events returns data frame containing track events columns: track (character) track ID. dt (lubridate::POSIXct) datetime. occcupied (logical) TRUE train enters track, else FALSE. event (character) 'enters' train enters track, else 'vacates'.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/preprocess_signal_events.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Preprocess raw Centrix data — preprocess_signal_events","text":"preprocess_signal_events() converts raw asset string signal ID state, furthering processing state signal aspect. preprocess_track_events() converts transition data track entry exit events.","code":""},{"path":[]},{"path":"https://sebmerricks.github.io/railvarr/reference/railvarr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"railvarr: Rail Network Performance Variability Analysis — railvarr-package","title":"railvarr: Rail Network Performance Variability Analysis — railvarr-package","text":"Provide functionality aid pre-processing analysis railway data, goal analysing network performance variability.","code":""},{"path":[]},{"path":"https://sebmerricks.github.io/railvarr/reference/railvarr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"railvarr: Rail Network Performance Variability Analysis — railvarr-package","text":"Maintainer: Sebastian Merricks b8072600@newcastle.ac.uk","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/state_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Default signal state to aspect mapping — state_mapping","title":"Default signal state to aspect mapping — state_mapping","text":"default 1-1 mapping signal state aspect. See https://wiki.openraildata.com/index.php/Signalling_Nomenclature#Signals. used default state mapping Centrix wrangling.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/state_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default signal state to aspect mapping — state_mapping","text":"","code":"state_mapping"},{"path":[]},{"path":"https://sebmerricks.github.io/railvarr/reference/state_mapping.html","id":"state-mapping","dir":"Reference","previous_headings":"","what":"state_mapping","title":"Default signal state to aspect mapping — state_mapping","text":"data frame 4 rows 2 columns: state Signal state aspect Signal aspect factor","code":""},{"path":[]},{"path":"https://sebmerricks.github.io/railvarr/reference/wrangle_centrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrangle Raw Centrix Data — wrangle_centrix","title":"Wrangle Raw Centrix Data — wrangle_centrix","text":"function takes raw Centrix data input returns fully processed data frame containing berth-level signal track observations, along calculations TSAR subcomponents.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/wrangle_centrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrangle Raw Centrix Data — wrangle_centrix","text":"","code":"wrangle_centrix(raw_centrix, asset_map, state_map = state_mapping)"},{"path":"https://sebmerricks.github.io/railvarr/reference/wrangle_centrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrangle Raw Centrix Data — wrangle_centrix","text":"raw_centrix data frame containing raw Centrix data. Strict input validation applied ensure data adhere expected structure. data data frame following columns: asset: character vector containing asset ID. Tracks expected follow regex pattern \"T[-Z]+(-[0-9])?\". E.g., 'TABC' 'TABC-1' 'TABC-2'. Signals expected follow regex pattern \"S[0-9]+\\s[-Z]+\". E.g., 'S123 HGE' 'S123 '. second part signal ID state code referring signal aspect, e.g. 'RGE' red 'DGE' green. codes see: https://wiki.openraildata.com/index.php/Signalling_Nomenclature#Signals. dt: lubridate::POSIXct object representing date time observation made. transition: character vector representing state transition caused observation. transition can one \"DN\" \"DN \", anything else ignored. tracks, \"DN\" signifies train entering track, \"DN \" train vacating track. signals, \"DN\" represents aspect change. Therefore, signals \"DN \" transition ignored. asset_map data frame containing 1-1 mapping signals berths 1-many mapping berths tracks. map also contains 1-many mapping tracks events, reflecting fact 'enter' 'vacate' event track. Therefore, data frame adhere following structure: signal: character vector containing signal ID. follow regex pattern \"S[0-9]+\". berth: character vector containing berth ID. follow regex pattern \"[-Z]+\". track: character vector containing track ID. follow regex pattern \"T[-Z]+(-[0-9])?\". event: character vector containing event type. must one either \"enters\" \"vacates\". state_map data frame containing 1-1 mapping signal state signal aspect. See state_mapping (default) expected structure.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/wrangle_centrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrangle Raw Centrix Data — wrangle_centrix","text":"data frame containing fully processed Centrix data, containing berth-level information signal track events. includes TSARs sub-components, e.g. 'T_travel' 'T_offset'.","code":""},{"path":[]},{"path":"https://sebmerricks.github.io/railvarr/reference/wrangle_centrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrangle Raw Centrix Data — wrangle_centrix","text":"","code":"# This will require some example data"},{"path":"https://sebmerricks.github.io/railvarr/reference/wrangle_timetable.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrangle Timetable Data — wrangle_timetable","title":"Wrangle Timetable Data — wrangle_timetable","text":"wrapper timetable processing functions filter_relevant_services(), filter_relevant_direction(), find_calling_patterns().","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/wrangle_timetable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrangle Timetable Data — wrangle_timetable","text":"","code":"wrangle_timetable(timetable, stations)"},{"path":"https://sebmerricks.github.io/railvarr/reference/wrangle_timetable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrangle Timetable Data — wrangle_timetable","text":"timetable Data frame containing timetable data. stations List containing station names.","code":""},{"path":"https://sebmerricks.github.io/railvarr/reference/wrangle_timetable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrangle Timetable Data — wrangle_timetable","text":"subset timetable contains trains pass specified stations given order. Time zone set \"UTC\".","code":""},{"path":[]}]
